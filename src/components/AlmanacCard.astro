---
import type { CollectionEntry } from 'astro:content';
import FeaturedPlant from './FeaturedPlant.astro';

interface Props {
  entry: CollectionEntry<'almanac'>;
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<div class="card-header">
  <img src={`${import.meta.env.BASE_URL || '/'}images/navigation/icons/icon_almanac.png`} alt="Almanac" class="section-icon" />
  <h2 class="text-2xl font-medium text-cream m-0">Seasonal Almanac</h2>
</div>

<div class="card-content">
  <div class="current-week">
    <h3 class="text-3xl text-moss mb-sm font-medium">{entry.data.title}</h3>
    
    {entry.data.moon_phase && (
      <p class="moon-phase bg-parchment border-l-4 border-moss p-sm my-sm italic text-sepia">
        {entry.data.moon_phase} - Time for reflection and growth
      </p>
    )}
    
    <!-- Full Almanac Content -->
    <div class="almanac-content">
      <Content />
    </div>

    <!-- Featured Plant Section with Dynamic Data -->
    {entry.data.featured_plant_image && entry.data.featured_plant_name && (
      <FeaturedPlant 
        name={entry.data.featured_plant_name}
        scientificName={entry.data.featured_plant_scientific}
        image={entry.data.featured_plant_image}
        description={entry.data.featured_plant_description || ""}
        properties={entry.data.featured_plant_properties || []}
      />
    )}
    
    <!-- Tags -->
    {entry.data.tags && (
      <div class="tags mt-md">
        <div class="flex flex-wrap gap-2">
          {entry.data.tags.map(tag => (
            <span class="inline-block bg-moss text-cream px-2 py-1 rounded-full text-xs uppercase tracking-wide">
              {tag}
            </span>
          ))}
        </div>
      </div>
    )}
  </div>
</div>